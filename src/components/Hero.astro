---
import { PortableText } from "astro-portabletext";
import Button from "./Button.astro";
import Arrow from "../../assets/svgs/arrow.svg";
import { Icon } from "astro-icon/components";


interface ButtonType {
  text: string;
  link: string;
}

interface FeatureBlockType {
  title: string;
  icon?: { asset?: { url?: string } };
  link?: string;
  backgroundColor?: string;
}

interface SocialLinkType {
  platform: string;
  url: string;
  customIcon?: { asset?: { url?: string } };
}

interface Props {
  content: {
    heroLayout: 'simpleButtons' | 'imageWithText' | 'featureBlocks' | 'teamFormat';
    title: string;
    subtitle?: string;
    mainImage?: { url?: string };
    secondaryImage?: { url?: string };
    buttons?: ButtonType[];
    featureBlocks?: FeatureBlockType[];
    socialLinks?: SocialLinkType[];
    backgroundColor?: string;
    textColor?: string;
  };
}

const { content } = Astro.props;

function getStyle(bg?: string, color?: string) {
  return {
    ...(bg ? { background: bg } : {}),
    ...(color ? { color } : {}),
  };
}

// Social platform to icon mapping
const socialIconMap = {
  facebook: 'mingcute:facebook-line',
  instagram: 'mingcute:instagram-line',
  twitter: 'mingcute:twitter-line',
  linkedin: 'mingcute:linkedin-line',
  youtube: 'mingcute:youtube-line',
  tiktok: 'mingcute:tiktok-line',
};
---

<section class="hero-component" style={getStyle(content.backgroundColor, content.textColor)} transition:animate="fade">
  <div class="container mx-auto py-8">
    {content.heroLayout === 'simpleButtons' && (
      <div class="grid items-center justify-center">
        <div class="col-span-1 text-center">
          <h1 class="font-source-serif-4 font-bold text-[60px] leading-[60px] tracking-[-0.03em] animate-on-scroll slide-up">
            {content.title}
          </h1>
          {content.subtitle && (
            <p class="font-source-sans-pro font-normal text-[22px] leading-[39px] mt-6 animate-on-scroll slide-up delay-100">
              {content.subtitle}
            </p>
          )}
          {content.buttons && content.buttons.length > 0 && (
            <div class="flex flex-wrap gap-4 mt-8 justify-center">
              {content.buttons.map((btn, index) => (
                <Button href={btn.link} background={`${index === 0 ? 'primary' : 'white'}`}>{btn.text}</Button>
              ))}
            </div>
          )}
        </div>
        {content.mainImage?.url && (
          <div class="col-span-1 animate-on-scroll slide-up delay-300">
            <img src={content.mainImage.url} alt={content.title} class="w-full h-full object-cover rounded-xl" />
          </div>
        )}
      </div>
    )}
    {content.heroLayout === 'imageWithText' && (
      <div class="grid lg:grid-cols-2 gap-x-10 items-center">

        <div class="col-span-1">
          <h1 class="font-source-serif-4 font-bold text-[60px] leading-[60px] tracking-[-0.03em] animate-on-scroll slide-up">
            {content.title}
          </h1>
          {content.subtitle && (
            <p class="font-source-serif-4 font-normal text-[20px] leading-[30px] mt-6 animate-on-scroll slide-up delay-100">
              {content.subtitle}
            </p>
          )}
          {content.buttons && content.buttons.length > 0 && (
            <div class="flex flex-wrap gap-4 mt-8">
              {content.buttons.map((btn, index) => (
                <Button href={btn.link} background={`${index === 0 ? 'primary' : 'white'}`}>{btn.text}</Button>
              ))}
            </div>
          )}
        </div>
        <div class="col-span-1 animate-on-scroll slide-up delay-100 mt-10 lg:mt-0">
          {content.mainImage?.url && (
            <img src={content.mainImage.url} alt={content.title} class="w-full h-full object-cover rounded-xl" />
          )}
               <div class="mt-10 flex gap-6">
          {content.featureBlocks && content.featureBlocks.length > 0 && (
            <>
              {content.featureBlocks[0] && (
                <a href={content.featureBlocks[0].link || '#'} class="rounded-xl flex shadow-md transition-transform hover:scale-105 py-6 px-8 col-span-1 bg-primary max-w-[380px] mx-auto">
                  <span class="flex flex-col">
                    {content.featureBlocks[0].icon?.asset?.url && (
                      <img src={content.featureBlocks[0].icon.asset.url} alt={content.featureBlocks[0].title} class="mb-2 object-contain" />
                    )}
                    <span class="font-bold text-center font-source-serif-4 text-[50px] leading-none">{content.featureBlocks[0].title}</span>
                  </span>
                  <span class="bg-white rounded-full w-[90px] h-[90px] flex items-center justify-center block mt-auto ml-5 flex-[0_0_90px]">
                    <span class="text-black font-bold text-center font-source-serif-4 text-[50px]"><Arrow fill="black" /></span>
                  </span>
                </a>
              )}
              {content.featureBlocks[1] && (
                <a href={content.featureBlocks[1].link || '#'} class="rounded-xl flex shadow-md transition-transform hover:scale-105 py-6 px-8 col-span-1 bg-[#DBDBDB] max-w-[380px] mx-auto">
                  <span class="flex flex-col">
                    {content.featureBlocks[1].icon?.asset?.url && (
                      <img src={content.featureBlocks[1].icon.asset.url} alt={content.featureBlocks[1].title} class=" object-contain self-start" />
                    )}
                    <span class="font-bold font-source-serif-4 text-[50px] leading-none">{content.featureBlocks[1].title}</span>
                    
                  </span>
                  <span class="bg-black rounded-full w-[90px] h-[90px] flex items-center justify-center block flex-[0_0_90px]">
                    <span class="text-white font-bold text-center font-source-serif-4 text-[50px]"><Arrow class="-rotate-90" fill="white" /></span>
                  </span>
                </a>
              )}
            </>
          )}
        </div>
        </div>
      </div>
    )}
    {content.heroLayout === 'teamFormat' && (
        <div class="max-w-[850px] text-center mx-auto">
          <h1 class="font-source-serif-4 font-bold text-[60px] leading-[60px] tracking-[-0.03em] animate-on-scroll slide-up">
            {content.title}
          </h1>
          {content.subtitle && (
            <p class="font-source-serif-4 font-normal text-[20px] leading-[30px] mt-6 animate-on-scroll slide-up delay-100">
              {content.subtitle}
            </p>
          )}
        </div>
              <div class="team-format-buttons mb-10">
      {(content.buttons && content.buttons.length > 0 || content.socialLinks && content.socialLinks.length > 0) && (
        <div class="flex flex-wrap gap-4 justify-center">
          {content.buttons && content.buttons.length > 0 && (
            <div class="flex flex-wrap gap-4 mt-8 justify-center animate-on-scroll slide-up delay-100">
              {content.buttons.map((btn, index) => (
                <Button href={btn.link} background={`${index === 0 ? 'primary' : 'white'}`}>{btn.text}</Button>
              ))}
            </div>
          )}
          {content.socialLinks && content.socialLinks.length > 0 && (
            <div class="flex flex-wrap gap-4 mt-8 justify-center">
              {content.socialLinks.map((link, index) => {
                const iconName = socialIconMap[link.platform.toLowerCase() as keyof typeof socialIconMap];
                return (
                  <a href={link.url} class="flex items-center justify-center animate-on-scroll slide-up delay-100" target="_blank" rel="noopener noreferrer" aria-label={link.platform}>
                    {iconName ? (
                     <Icon name={iconName} class="w-[50px] h-[50px]" />
                    ) : (
                      <span class="capitalize font-semibold">{link.platform}</span>
                    )}
                  </a>
                );
              })}
            </div>
          )}
        </div>
      )}
    </div>
      <div class="team-format-grid grid grid-cols-1 lg:[grid-template-columns:753px_378px_426px] gap-8 items-center">
        {/* Left: Main Image */}
        <div class="team-format-image animate-on-scroll slide-up delay-100">
          {content.mainImage?.url && (
            <img src={content.mainImage.url} alt={content.title} class="w-full object-cover rounded-xl" />
          )}
        </div>
        {/* Middle: Feature Blocks */}
        <div class="team-format-features flex flex-col gap-6 ">
          {content.featureBlocks && content.featureBlocks.length > 0 && (
            <>
              {content.featureBlocks[0] && (
                <a href={content.featureBlocks[0].link || '#'} class="rounded-xl flex shadow-md transition-transform hover:scale-105 py-6 px-8 col-span-1 bg-primary max-w-[380px] mx-auto animate-on-scroll slide-up delay-200">
                  <span class="flex flex-col">
                    {content.featureBlocks[0].icon?.asset?.url && (
                      <img src={content.featureBlocks[0].icon.asset.url} alt={content.featureBlocks[0].title} class="mb-2 object-contain" />
                    )}
                    <span class="font-bold text-center font-source-serif-4 text-[50px] leading-none">{content.featureBlocks[0].title}</span>
                  </span>
                  <span class="bg-white rounded-full w-[90px] h-[90px] flex items-center justify-center block mt-auto ml-5 flex-[0_0_90px]">
                    <span class="text-black font-bold text-center font-source-serif-4 text-[50px]"><Arrow fill="black" /></span>
                  </span>
                </a>
              )}
              {content.featureBlocks[1] && (
                <a href={content.featureBlocks[1].link || '#'} class="rounded-xl flex shadow-md transition-transform hover:scale-105 py-6 px-8 col-span-1 bg-[#DBDBDB] max-w-[380px] mx-auto animate-on-scroll slide-up delay-300">
                  <span class="flex">
                    <span class="font-bold font-source-serif-4 text-[50px] leading-none">{content.featureBlocks[1].title}</span>
                    {content.featureBlocks[1].icon?.asset?.url && (
                      <img src={content.featureBlocks[1].icon.asset.url} alt={content.featureBlocks[1].title} class=" object-contain" />
                    )}
                  </span>
                  <span class="bg-black rounded-full w-[90px] h-[90px] flex items-center justify-center block flex-[0_0_90px]">
                    <span class="text-white font-bold text-center font-source-serif-4 text-[50px]"><Arrow class="-rotate-90" fill="white" /></span>
                  </span>
                </a>
              )}
            </>
          )}
        </div>
        <div class="team-format-image col-span-1 animate-on-scroll slide-up delay-400">
          {content.secondaryImage?.url && (
            <img src={content.secondaryImage.url} alt={content.title + ' secondary'} class="w-full object-cover rounded-xl" />
          )}
        </div>
      </div>

    )}
    {!['simpleButtons','imageWithText','featureBlocks','teamFormat'].includes(content.heroLayout) && (
      <div class="text-center text-red-600 font-bold">Unknown hero layout: {content.heroLayout}</div>
    )}
  </div>
</section>