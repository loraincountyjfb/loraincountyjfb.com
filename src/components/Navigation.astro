---
import '../styles/header.scss';
import { sanityClient } from "sanity:client";
import { loadQuery } from '../../lib/load-query';
import type { SanityDocument } from "@sanity/client";
import imageUrlBuilder from '@sanity/image-url';
import marketingExpertise from '../../assets/images/marketing-expertise.webp';
import phoneIcon from '../../assets/images/icon-phone.webp';

import partnerLogo1 from '../../assets/images/menu/logos/arthritis.png';
import partnerLogo2 from '../../assets/images/menu/logos/o-neill.png';
import partnerLogo3 from '../../assets/images/menu/logos/soltera.png';
import partnerLogo4 from '../../assets/images/menu/logos/apex.png';

const builder = imageUrlBuilder(sanityClient);

function urlFor(source: any) {
  if (source) {
    if (builder.image(source)) {
      return builder.image(source);
    } else {
      return source;
    }
  }
  return null;
}

// Define TypeScript interfaces for the Sanity data structure
// These interfaces match the schema defined in headerMenuType.ts
interface CalloutType {
  subTitle?: string;
  title?: string;
  link?: string;
  backgroundImage?: string;
}

interface DropdownSubMenuItem {
  label: string;
  link: string;
}

interface DropdownMenuItem {
  label: string;
  link: string;
  image?: string;
  dropdownSubMenu?: DropdownSubMenuItem[];
}

interface Column {
  dropdownMenu: DropdownMenuItem[];
}

interface TileItem {
  subTitle?: string;
  title?: string;
  image?: any;
  link?: string;
}

interface MenuItem {
  label: string;
  link: string;
  type?: 'email-signup-left' | 'email-signup-right' | 'tiles' | 'phone-left' | 'phone-right' | 'callout';
  callout?: CalloutType;
  columns?: Column[];
  tiles?: TileItem[];
}

interface MenuItemWrapper {
  menu: MenuItem[];
}

interface HeaderMenuType extends SanityDocument {
  title: string;
  menuItems: MenuItemWrapper[];
}

// Query to fetch the header menu data from Sanity
// This GROQ query matches the structure defined in the schema and interfaces above
const HEADER_MENU_QUERY = `*[_type == "headerMenu" && defined(slug.current)][0]{
  title,
  menuItems[] {
    menu[] {
      label,
      link,
      type,
      callout {
        subTitle,
        title,
        link,
        backgroundImage
      },
      tiles[] {
        subTitle,
        title,
        image,
        link
      },
      columns[] {
        dropdownMenu[] {
          label,
          link,
          image,
          dropdownSubMenu[] {
            label, 
            link
          }
        }
      }
    }
  }
}`;

// Fetch the header menu data
const { data } = await loadQuery({
  query: HEADER_MENU_QUERY,
  params: {},
  enabled: true,
});

// Use type assertion to inform TypeScript about the structure
// This ensures type safety when accessing nested properties
const headerMenu = data as HeaderMenuType;
---

<nav
  class="box-border flex relative flex-col shrink-0 self-stretch p-5 bg-stone-50 min-h-[100px]"
  role="navigation"
  aria-label="Main navigation"
>
  <header
    class="box-border relative grow shrink-0 self-stretch p-5 mx-auto w-full bg-stone-50 max-w-[1300px] min-h-[100px]"
  >
    <div
      class="box-border flex relative flex-row shrink-0 gap-2.5 justify-between max-w-[1400px] min-w-80 max-md:flex max-md:flex-row max-md:justify-between max-md:items-center max-md:self-center max-md:w-full"
    >
      <!-- Logo -->
      <a href="/">
        <img
          src="/images/logo.png"
          alt="LCJFB"
          class="box-border object-contain overflow-hidden shrink-0 aspect-[0.64] h-[51px] min-h-5 min-w-5 w-[51px]"
        />
      </a>

      <!-- Navigation Links -->
      <div
        class="flex overflow-hidden flex-wrap flex-auto gap-5 justify-center items-center max-md:hidden max-sm:hidden"
        role="menubar"
      >
        <a
          href="/history"
          class="self-stretch my-auto text-base font-medium uppercase hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"
          role="menuitem"
        >
          History
        </a>
        <a
          href="/fair-entry"
          class="self-stretch my-auto text-base font-medium uppercase hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"
          role="menuitem"
        >
          Fair Entry
        </a>
        <a
          href="/forms"
          class="self-stretch my-auto text-base font-medium uppercase hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"
          role="menuitem"
        >
          Forms
        </a>
        <a
          href="/sponsorships"
          class="self-stretch my-auto text-base font-medium uppercase hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"
          role="menuitem"
        >
          Sponsorships
        </a>
        <a
          href="/stock-the-trailer"
          class="self-stretch my-auto text-base font-medium uppercase hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"
          role="menuitem"
        >
          Stock the Trailer
        </a>
        <a
          href="/livestock-auction"
          class="self-stretch my-auto text-base font-medium uppercase hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"
          role="menuitem"
        >
          Livestock Auction
        </a>
        <a
          href="/junior-fair-apparel"
          class="self-stretch my-auto text-base font-medium uppercase hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"
          role="menuitem"
        >
          Junior Fair Apparel
        </a>
        <a
          href="#departments"
          class="self-stretch my-auto text-base font-medium uppercase hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"
          role="menuitem"
        >
          Departments
        </a>
      </div>

      <!-- Cart Button -->
      <!-- <button
        class="flex gap-5 justify-center px-4 py-1.5 ml-auto text-2xl tracking-tighter text-white rounded-2xl bg-neutral-800 hover:bg-neutral-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-neutral-500 transition-colors max-md:justify-end max-md:items-center max-md:ml-auto max-md:text-center"
        aria-label="Shopping cart"
      >
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 0 0-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 0 0-16.536-1.84M7.5 14.25 5.106 5.272M6 20.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Zm12.75 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z" />
        </svg>
        <span class="self-stretch my-auto text-base">CART</span>
      </button> -->

      <!-- Mobile Menu Toggle (visible on mobile devices) -->
      <button 
        class="hidden max-md:flex max-md:items-center max-md:justify-center max-md:p-2 max-md:text-gray-800" 
        id="mobile-menu-toggle"
        aria-label="Toggle mobile menu"
      >
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
        </svg>
      </button>
    </div>
  </header>
</nav>

<!-- Mobile Menu (hidden by default) -->
<!-- <div id="mobile-menu" class="fixed inset-0 z-50 bg-white transform translate-x-full transition-transform duration-300 ease-in-out">
  <div class="flex justify-end p-4">
    <button id="close-mobile-menu" class="text-gray-800 p-2">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
  </div>
  <div class="px-4 py-2 space-y-4">
    <a href="/history" class="block py-2 text-lg font-medium text-gray-800 border-b border-gray-200">History</a>
    <a href="/fair-entry" class="block py-2 text-lg font-medium text-gray-800 border-b border-gray-200">Fair Entry</a>
    <a href="/forms" class="block py-2 text-lg font-medium text-gray-800 border-b border-gray-200">Forms</a>
    <a href="/sponsorships" class="block py-2 text-lg font-medium text-gray-800 border-b border-gray-200">Sponsorships</a>
    <a href="/stock-the-trailer" class="block py-2 text-lg font-medium text-gray-800 border-b border-gray-200">Stock the Trailer</a>
    <a href="/livestock-auction" class="block py-2 text-lg font-medium text-gray-800 border-b border-gray-200">Livestock Auction</a>
    <a href="/junior-fair-apparel" class="block py-2 text-lg font-medium text-gray-800 border-b border-gray-200">Junior Fair Apparel</a>
    <a href="/departments" class="block py-2 text-lg font-medium text-gray-800 border-b border-gray-200">Departments</a>
  </div>
</div> -->

<script>
  function initializeMenu() {
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    const closeMobileMenu = document.getElementById('close-mobile-menu');
    
    if (mobileMenuToggle && mobileMenu && closeMobileMenu) {
      mobileMenuToggle.addEventListener('click', () => {
        mobileMenu.classList.remove('translate-x-full');
      });
      
      closeMobileMenu.addEventListener('click', () => {
        mobileMenu.classList.add('translate-x-full');
      });
    }
  }

  // Initialize on page load
  document.addEventListener('DOMContentLoaded', initializeMenu);
  
  // Re-initialize after view transitions
  document.addEventListener('astro:page-load', initializeMenu);
</script>
<script>
  // JavaScript for dropdown functionality
  function initializeMenu() {
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    const closeMobileMenu = document.getElementById('close-mobile-menu');
    
    if (mobileMenuToggle && mobileMenu && closeMobileMenu) {
      mobileMenuToggle.addEventListener('click', () => {
        mobileMenu.classList.remove('translate-x-full');
      });
      
      closeMobileMenu.addEventListener('click', () => {
        mobileMenu.classList.add('translate-x-full');
      });
    }
  }

  // Initialize on page load
  document.addEventListener('DOMContentLoaded', initializeMenu);
  
  // Re-initialize after view transitions
  document.addEventListener('astro:page-load', initializeMenu);
</script>